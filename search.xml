<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mac使用spoof修改Mac地址</title>
    <url>/2024/04/21/Mac%E4%BD%BF%E7%94%A8spoof%E4%BF%AE%E6%94%B9Mac%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<p>使用brew安装spoof：<br><code>brew install spoof-mac</code></p>
<span id="more"></span>

<p>随机生成MAC地址(以en0 wifi为例）：</p>
<p><code>sudo spoof-mac randomize en0        ##端口名</code><br><code>spoof-mac randomize wi-fi           ##设备名</code></p>
<p>还原默认的MAC地址：</p>
<p><code>sudo spoof-mac reset en0</code></p>
<p>一些简短的用法示例：</p>
<p>列出可用设备：</p>
<p><code>spoof-mac list</code></p>
<p>列出可用设备，但仅列出wifi上的设备：</p>
<p><code>spoof-mac list --wifi</code></p>
<p>将设备MAC地址设置为指定的：</p>
<p><code>spoof-mac set 00:00:00:00:00:00 en0</code></p>
<p>参考文章: <a href="https://www.5axxw.com/wiki/content/otrm73">https://www.5axxw.com/wiki/content/otrm73</a></p>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next v8.2.0的搭建与优化</title>
    <url>/2024/08/09/Hexo-Next%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>很早就想弄一个博客,在大一的暑假终于开始着手搭建,在经过一番研究和比较，我最终决定采用 Hexo 系统来构建我的个人博客。主题选择了比较简洁的Next。<span id="more"></span><br>本次搭建环境：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主题Next：8.20.0</span><br><span class="line">npm：10.7.0</span><br><span class="line"></span><br><span class="line">hexo version</span><br><span class="line">hexo-cli: 4.3.2</span><br><span class="line">os: darwin 23.5.0 14.5</span><br><span class="line">node: 20.15.1</span><br><span class="line">acorn: 8.11.3</span><br><span class="line">ada: 2.7.8</span><br><span class="line">ares: 1.32.1</span><br><span class="line">base64: 0.5.2</span><br><span class="line">brotli: 1.1.0</span><br><span class="line">cjs_module_lexer: 1.2.2</span><br><span class="line">cldr: 44.1</span><br><span class="line">icu: 74.2</span><br><span class="line">llhttp: 8.1.2</span><br><span class="line">modules: 115</span><br><span class="line">napi: 9</span><br><span class="line">nghttp2: 1.61.0</span><br><span class="line">openssl: 3.3.1</span><br><span class="line">simdutf: 5.2.8</span><br><span class="line">tz: 2023c</span><br><span class="line">undici: 6.13.0</span><br><span class="line">unicode: 15.1</span><br><span class="line">uv: 1.48.0</span><br><span class="line">uvwasi: 0.0.21</span><br><span class="line">v8: 11.3.244.8-node.23</span><br><span class="line">zlib: 1.2.12</span><br></pre></td></tr></table></figure>

<h1 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h1><ol>
<li>去<a href="https://nodejs.org/zh-cn">官网</a>下载安装包（建议使用LTS版本）</li>
<li>Mac用户推荐使用brew安装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install node@20    <span class="comment">##安装v20.16.0(LTS)</span></span><br><span class="line">brew install node       <span class="comment">##安装最新版</span></span><br></pre></td></tr></table></figure>

<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g        <span class="comment">##全局安装Hexo</span></span><br><span class="line">hexo init blog                 <span class="comment">##初始化一个新的博客项目(默认在/user目录下)</span></span><br></pre></td></tr></table></figure>
<p>简单解释各文件夹的作用<br>node_modules：依赖包<br>scaffolds：命令生成文章等的模板<br>source：自己写的博文以及各种默认页面都存放在这个文件夹下<br>themes：存放 Hexo 的主题<br>_config.yml：站点配置，~&#x2F;blog文件夹里面的“_config.yml”是 <strong>站点</strong> 配置文件， ~&#x2F;blog&#x2F;theme&#x2F;next里的是 <strong>主题</strong> 配置文件<br>package.json：项目所需模块项目的配置信息，后续安装插件如果使用“– save”则会将包的名称和版本信息添加到此文件里，卸载时也要注意加上“–save”</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install                    <span class="comment">##安装项目所需的依赖包</span></span><br><span class="line">hexo server                    <span class="comment">##本地启动服务</span></span><br></pre></td></tr></table></figure>
<p>访问 <a href="http://localhost:4000/">http://localhost:4000</a> ，此时您将看到 Hexo 的默认界面。接下来，我们就要开始为它挑选美观的主题和实用的插件，进行一番精心的“装修”了。</p>
<h1 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h1><p>注意：NexT的仓库地址经过了几次变化，请见<a href="https://theme-next.js.org/docs/getting-started/upgrade.html#NexT-Repositories">NexT Repositories</a></p>
<table>
<thead>
<tr>
<th align="center">Years</th>
<th align="center">Version</th>
<th align="center">Repository</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2014 ~ 2017</td>
<td align="center">v5</td>
<td align="center"><a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></td>
</tr>
<tr>
<td align="center">2018 ~ 2019</td>
<td align="center">v6 ~v7</td>
<td align="center"><a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></td>
</tr>
<tr>
<td align="center">2020</td>
<td align="center">v8</td>
<td align="center"><a href="https://github.com/next-theme/hexo-theme-next">https://github.com/next-theme/hexo-theme-next</a></td>
</tr>
</tbody></table>
<p>我一开始没弄清楚，用v7.8.0都弄得差不多了，才发现用的是老版本😭</p>
<p>在blog目录执行</p>
<p><code>npm install hexo-theme-next</code></p>
<p>打开站点配置文件，<br>找到 “theme” 将 “landscape” 改为 “next” </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>


<h1 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h1><p>关于站点配置文件的说明可以查看以下文章</p>
<ol>
<li><a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a></li>
<li><a href="https://www.lvxuefei.top/Hexo%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/">槐雪博客</a>(推荐)</li>
<li><a href="https://io-oi.me/tech/hexo-next-optimization/#%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">reuixiy博客</a></li>
</ol>
<p><strong>注意：</strong>修改了站点配置后，需要先停止本地服务，再使用以下命令来重启服务，才能看到修改后的结果，而修改了主题配置可以按command+shift+R (macOS) 或 ctrl+F5 (Windows&#x2F;Linux) 来强制刷新网页，也能立即看到修改后的效果。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo server</span><br></pre></td></tr></table></figure>


<h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2><p>Next 主题自带四种样式，官方提供了预览<br><a href="https://theme-next.js.org/muse/">💟Muse</a>      <a href="https://theme-next.js.org/mist/">🔯Mist</a>      <a href="https://theme-next.js.org/pisces/">♓️Pisces</a>      <a href="https://theme-next.js.org/">♊️Gemini</a></p>
<p>挑选好自己喜欢的主题后打开站点配置文件，不要注释自己所选的样式，比如我选择“Mist”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>

<h2 id="修改网站图标"><a href="#修改网站图标" class="headerlink" title="修改网站图标"></a>修改网站图标</h2><p>将自己的图片放到 themes&#x2F;next&#x2F;source&#x2F;images 文件夹下面然后修改文件名就可以了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  #android_manifest: /manifest.json</span><br></pre></td></tr></table></figure>

<h2 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h2><p>将你需要的界面取消注释， ||  后面的是font awesome图标，在<a href="https://fontawesome.com/icons">这里</a>可以找到你需要的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home                    #首页</span><br><span class="line">  about: /about/ || fa fa-user             #关于</span><br><span class="line">  tags: /tags/ || fa fa-tags               #标签</span><br><span class="line">  categories: /categories/ || fa fa-th     #分类</span><br><span class="line">  archives: /archives/ || fa fa-archive    #归档</span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar  #日程表</span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap  #站点地图</span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat    #404页面</span><br></pre></td></tr></table></figure>

<p>选择需要的菜单后，需要在&#x2F;blog目录下执行以下命令（以about界面为例）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>
<p>然后就可以在&#x2F;blog&#x2F;ource&#x2F;about&#x2F;index.md 里面编辑内容了</p>
<h2 id="修改底部网站建立时间"><a href="#修改底部网站建立时间" class="headerlink" title="修改底部网站建立时间"></a>修改底部网站建立时间</h2><p>把since后面改成建立网站的年份</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Specify the year when the site was setup. If not defined, current year will be used.</span><br><span class="line">  since: 2024</span><br></pre></td></tr></table></figure>

<h2 id="自定义网站底部的♥️"><a href="#自定义网站底部的♥️" class="headerlink" title="自定义网站底部的♥️"></a>自定义网站底部的♥️</h2><p>找到以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Icon between year and copyright info.</span><br><span class="line">icon:</span><br><span class="line">  # Icon name in Font Awesome. See: https://fontawesome.com/icons</span><br><span class="line">  name: fa fa-heart      ##fontawesome图标可自定义</span><br><span class="line">  # If you want to animate the icon, set it to true.</span><br><span class="line">  animated: true         ##是否开启动态图标</span><br><span class="line">  # Change the color of icon, using Hex Code.</span><br><span class="line">  color: &quot;#ff0000&quot;       ##颜色</span><br></pre></td></tr></table></figure>

<h2 id="隐藏底部-powered-By-Hexo-强力驱动"><a href="#隐藏底部-powered-By-Hexo-强力驱动" class="headerlink" title="隐藏底部 powered By Hexo &#x2F; 强力驱动"></a>隐藏底部 powered By Hexo &#x2F; 强力驱动</h2><p>将powered改为false</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Powered by Hexo &amp; NexT</span><br><span class="line">powered: false</span><br></pre></td></tr></table></figure>

<p>或者打开themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.njk</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.footer.powered %&#125;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;</span><br><span class="line">    &#123;%- set next_site = &#x27;https://theme-next.js.org&#x27; if theme.scheme === &#x27;Gemini&#x27; else &#x27;https://theme-next.js.org/&#x27; + theme.scheme | lower + &#x27;/&#x27; %&#125;</span><br><span class="line">    &#123;&#123;- __(&#x27;footer.powered&#x27;, next_url(&#x27;https://hexo.io&#x27;, &#x27;Hexo&#x27;) + &#x27; &amp; &#x27; + next_url(next_site, &#x27;NexT.&#x27; + theme.scheme)) &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p>把这段代码首尾分别加上：<!-- 和-->，或者直接删除。也可修改其中的内容满足自己的需求<br>删除的方法来自<a href="https://blog.csdn.net/as480133937/article/details/100138838#t9">这里</a></p>
<h2 id="侧栏设置"><a href="#侧栏设置" class="headerlink" title="侧栏设置"></a>侧栏设置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  # Sidebar position. Available values: left | right  #侧栏的位置</span><br><span class="line">  position: left</span><br><span class="line"></span><br><span class="line">  # Sidebar width.                    #侧栏的宽度，注意修改对应的主题</span><br><span class="line">  # Applicable to Muse | Mist and mobile of Pisces | Gemini.</span><br><span class="line">  width_expanded: 320</span><br><span class="line">  # Applicable to desktop of Pisces | Gemini.</span><br><span class="line">  width_dual_column: 240</span><br><span class="line"></span><br><span class="line">  # Sidebar display.    #侧栏显示何时展示（只对Muse | Mist两种风格有效）</span><br><span class="line">  # Applicable to Muse | Mist and mobile of Pisces | Gemini.</span><br><span class="line">  # Available values:</span><br><span class="line">  #  - post     在文章页面（拥有目录列表）时显示,默认方式</span><br><span class="line">  #  - always   在所有页面中都显示</span><br><span class="line">  #  - hide     在所有页面中都隐藏（可以手动展开）</span><br><span class="line">  #  - remove   完全移除侧边栏，包括侧边栏切换按钮。</span><br><span class="line">  display: post</span><br><span class="line"></span><br><span class="line">  # Sidebar padding in pixels.  #边栏填充像素</span><br><span class="line">  padding: 18</span><br><span class="line">  # Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br><span class="line">  # 侧边栏与顶部菜单栏的偏移量，单位为像素（仅适用于 Pisces | Gemini）。</span><br><span class="line">  offset: 12</span><br></pre></td></tr></table></figure>
<h2 id="边栏头像"><a href="#边栏头像" class="headerlink" title="边栏头像"></a>边栏头像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: #/images/avatar.gif    #如要启用，请取消注释并且填入头像的路径</span><br><span class="line">  # If true, the avatar will be displayed in circle.</span><br><span class="line">  rounded: false              #是否开启圆角</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: false              #光标移到头像上后头像是否旋转</span><br></pre></td></tr></table></figure>

<h2 id="添加联系方式"><a href="#添加联系方式" class="headerlink" title="添加联系方式"></a>添加联系方式</h2><p>找到下面的代码，把自己需要添加的联系方式给取消注释，改成自己的链接，图标也可以自定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span><br><span class="line">social:</span><br><span class="line">  #GitHub: https://github.com/yourname || fab fa-github</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || fab fa-weibo</span><br><span class="line">  #Twitter: https://twitter.com/yourname || fab fa-twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || fab fa-facebook</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || fab fa-youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || fab fa-instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br><span class="line">  </span><br><span class="line">social_icons:       #图标设置</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br></pre></td></tr></table></figure>

<h1 id="网页优化以及插件安装"><a href="#网页优化以及插件安装" class="headerlink" title="网页优化以及插件安装"></a>网页优化以及插件安装</h1><h2 id="文章添加阴影"><a href="#文章添加阴影" class="headerlink" title="文章添加阴影"></a>文章添加阴影</h2><p>打开&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F;index.styl (Next v8.2.0)将</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.use-motion &#123;</span><br><span class="line">  if (hexo-config(&#x27;motion.transition.post_block&#x27;)) &#123;</span><br><span class="line">    .post-block, .pagination, .comments &#123;</span><br><span class="line">      visibility: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>修改为（注释可不加）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.use-motion &#123;</span><br><span class="line">  if (hexo-config(&#x27;motion.transition.post_block&#x27;)) &#123;</span><br><span class="line">    .post-block&#123;</span><br><span class="line">     visibility: hidden;</span><br><span class="line">     margin-top: 60px;</span><br><span class="line">     margin-bottom: 0px;</span><br><span class="line">     border-radius: 20px;      ##边框圆角</span><br><span class="line">     padding: 25px;            ##边距</span><br><span class="line">     -webkit-box-shadow: 0 0 3px rgba(128, 128, 128, .65);</span><br><span class="line">     -moz-box-shadow: 0 0 3px rgba(128, 128, 128, .65);</span><br><span class="line">	&#125;  .pagination, .comments &#123;</span><br><span class="line">      visibility: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>方法来自<a href="https://hst15701102464.github.io/2022/02/17/next%E4%B8%BA%E9%A6%96%E9%A1%B5%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E8%BE%B9%E6%A1%86%E9%98%B4%E5%BD%B1-%E7%BB%9D%E5%AF%B9%E6%9C%89%E6%95%88/">呼松涛的博客</a></p>
<p>此时你会发现首页的第一篇文章的边框上边距很大，但是第二篇是正常的，这时候使用浏览器开发者工具会发现，该边框的padding-top还是有80px，我也找不到这个代码在哪，所以曲线救国了</p>
<img src="https://tcer.rr.nu/i/2024/08/11/66b8605fde90a.webp"/>

<p>打开&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_schemes&#x2F;Mist&#x2F;_posts-expand.styl 添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.post-block:first-of-type &#123;</span><br><span class="line">  padding-top: 25px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这时你打开网页，就会发现边距合适了，但是用开发者工具查看，可以发现并没有把80px的代码去掉，只不过我们设置的优先级更高而已</p>
<img src="https://tcer.rr.nu/i/2024/08/11/66b8607abf97d.webp" />

<h2 id="调整首页文章边距"><a href="#调整首页文章边距" class="headerlink" title="调整首页文章边距"></a>调整首页文章边距</h2><p>和上面是同一个文件，打开&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_schemes&#x2F;Mist&#x2F;_posts-expand.styl<br>将120px，修改成合适的大小，我改为25px</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.post-block:not(:first-of-type) &#123;</span><br><span class="line">  margin-top: 120px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法来自<a href="https://hst15701102464.github.io/2022/02/17/Hexo-Next%E8%B0%83%E6%95%B4%E9%A6%96%E9%A1%B5%E6%96%87%E7%AB%A0%E9%97%B4%E8%B7%9D/">呼松涛的博客</a></p>
<h2 id="文章摘要设置"><a href="#文章摘要设置" class="headerlink" title="文章摘要设置"></a>文章摘要设置</h2><ol>
<li>手动添加<code>&lt;!-- more --&gt;</code>（推荐）</li>
<li>手动在文章前面添加 description 同时在主题配置里面<code>excerpt_description: true</code></li>
</ol>
<p>此方法见<a href="https://theme-next.js.org/docs/theme-settings/posts#Preamble-Text">官方文档</a></p>
<h2 id="文章字数统计，预估阅读时长"><a href="#文章字数统计，预估阅读时长" class="headerlink" title="文章字数统计，预估阅读时长"></a>文章字数统计，预估阅读时长</h2><p>这样的插件有几个“hexo-symbols-count-time”的<a href="https://github.com/theme-next/hexo-symbols-count-time?tab=readme-ov-file#hexo-symbols-count-time">README</a>里面写比起他家的更好，懒得折腾就直接用这个了</p>
<p>首先安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure>

<p>然后在站点配置里面添加（下面是我的配置，自已想研究去看官方<a href="https://github.com/theme-next/hexo-symbols-count-time?tab=readme-ov-file#hexo-symbols-count-time">README</a>吧）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 3</span><br><span class="line">  wpm: 260</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<p>再在主题配置里面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/next-theme/hexo-word-counter</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true      # 是否另起一行（true的话不和发表时间等同一行）</span><br><span class="line">  item_text_total: true    # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span><br><span class="line">  item_text_post: true      # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span><br></pre></td></tr></table></figure>

<h2 id="阅读进度"><a href="#阅读进度" class="headerlink" title="阅读进度"></a>阅读进度</h2><p>我是设置成在网站的顶部有一个小蓝条</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reading_progress:</span><br><span class="line">  enable: true</span><br><span class="line">  # Available values: left | right</span><br><span class="line">  start_at: left</span><br><span class="line">  # Available values: top | bottom</span><br><span class="line">  position: top</span><br><span class="line">  reversed: false</span><br><span class="line">  color: &quot;#2ab1ff&quot;</span><br><span class="line">  height: 2px</span><br></pre></td></tr></table></figure>
<p>back2top 也有这样的功能</p>
<h2 id="网页加载进度条"><a href="#网页加载进度条" class="headerlink" title="网页加载进度条"></a>网页加载进度条</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pace:</span><br><span class="line">  enable: true</span><br><span class="line">  # All available colors:</span><br><span class="line">  # black | blue | green | orange | pink | purple | red | silver | white | yellow</span><br><span class="line">  color: blue</span><br><span class="line">  # All available themes:</span><br><span class="line">  # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class="line">  # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure>


<h2 id="返回顶部"><a href="#返回顶部" class="headerlink" title="返回顶部"></a>返回顶部</h2><p>添加返回顶部的小按钮</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # Back to top in sidebar.</span><br><span class="line">  sidebar: false</span><br><span class="line">  # Scroll percent label in b2t button. </span><br><span class="line">  scrollpercent: false</span><br></pre></td></tr></table></figure>

<p>这个按纽竟然不是圆角，这肯定得改<br>修改back2top<br>打开&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;back-to-top.styl</p>
<p>顶部找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (hexo-config(&#x27;back2top.enable&#x27;)) &#123;</span><br><span class="line">  .back-to-top &#123;</span><br><span class="line">    font-size: $b2t-font-size;</span><br></pre></td></tr></table></figure>

<p>加上<code>border-radius: 7px;</code> </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (hexo-config(&#x27;back2top.enable&#x27;)) &#123;</span><br><span class="line">  .back-to-top &#123;</span><br><span class="line">    font-size: $b2t-font-size;</span><br><span class="line">    border-radius: 7px;</span><br></pre></td></tr></table></figure>

<h2 id="边栏按钮修改圆角"><a href="#边栏按钮修改圆角" class="headerlink" title="边栏按钮修改圆角"></a>边栏按钮修改圆角</h2><p>back2top都是圆角了，边栏按钮也得改<br>打开&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;outline&#x2F;sidebar&#x2F;sidebar-toggle.styl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.sidebar-toggle &#123;</span><br><span class="line">  bottom: $b2t-position-bottom-on + $sidebar-toggle-size + 5px;</span><br></pre></td></tr></table></figure>

<p>底部加上<code> border-radius: 7px;</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.sidebar-toggle &#123;</span><br><span class="line">  bottom: $b2t-position-bottom-on + $sidebar-toggle-size + 5px;</span><br><span class="line">  border-radius: 7px;</span><br><span class="line">  height: $sidebar-toggle-inner-size;</span><br></pre></td></tr></table></figure>

<h2 id="网页夜间模式切换按钮"><a href="#网页夜间模式切换按钮" class="headerlink" title="网页夜间模式切换按钮"></a>网页夜间模式切换按钮</h2><p><a href="https://github.com/rqh656418510/hexo-next-darkmode/tree/main">GitHub地址</a></p>
<p>安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure>

<p>确保 NexT 主题原生的 darkmode 选项设置为 false：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Close NexT&#x27;s darkmode</span><br><span class="line">darkmode: false</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>往 NexT 主题的 _config.yml 配置文件里添加以下内容,下面的是我的配置，由于切换的按钮太丑了，自己又不会调，也不会把他弄到菜单栏，所以就用上了自动根据设备切换深色模式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Darkmode JS</span><br><span class="line"># For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span><br><span class="line">darkmode_js:</span><br><span class="line">  enable: false</span><br><span class="line">  bottom: &#x27;24px&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  right: &#x27;24px&#x27; # default: &#x27;32px&#x27;</span><br><span class="line">  left: &#x27;unset&#x27; # default: &#x27;unset&#x27;</span><br><span class="line">  time: &#x27;0.4s&#x27; # default: &#x27;0.3s&#x27;</span><br><span class="line">  mixColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  backgroundColor: &#x27;transparent&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  buttonColorDark: &#x27;#2B2727&#x27; # default: &#x27;#100f2c&#x27;</span><br><span class="line">  buttonColorLight: &#x27;#F2EECF&#x27; # default: &#x27;#fff&#x27;</span><br><span class="line">  isActivated: false # default false</span><br><span class="line">  saveInCookies: true # default: true</span><br><span class="line">  label: &#x27;🌓&#x27; # default: &#x27;&#x27;</span><br><span class="line">  autoMatchOsTheme: true # default: true</span><br><span class="line">  libUrl: # Set custom library cdn url for Darkmode.js</span><br></pre></td></tr></table></figure>

<h2 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h2><p>1.手动加密，方法来自<a href="https://blog.csdn.net/as480133937/article/details/100138838#t35">这里</a>不是很安全，所以建议使用下面的插件<br>2.插件的<a href="https://github.com/D0n9X1n/hexo-blog-encrypt">官方地址</a>,插件还有很多功能是我没有用到的，推荐看官方文档配置</p>
<p>安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>

<p>只想简单使用直接在文章头添加以下信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line">- 作为日记加密</span><br><span class="line">date: 2016-03-30 21:12:21</span><br><span class="line">password: mikemessi</span><br><span class="line">abstract: 有东西被加密了, 请输入密码查看.</span><br><span class="line">message: 您好, 这里需要密码.</span><br><span class="line">wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>每一篇文章都这样配置太麻烦了，所以在 <strong>站点</strong> 配置添加以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  # Security</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  silent: true</span><br><span class="line">  theme: wave           #官方文档有主题示例</span><br><span class="line">  abstract: 有东西被加密了，需要密码才能继续阅读。</span><br><span class="line">  message: 嘿，这里需要密码。</span><br><span class="line">  wrong_pass_message: 这个密码看着不太对，请再试试。</span><br><span class="line">  wrong_hash_message: 抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。</span><br></pre></td></tr></table></figure>

<p>官方的主题示例</p>
<p><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Default/">default</a><br><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Blink/">blink</a><br><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Shrink/">shrink</a><br><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Flip/">flip</a><br><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Up/">up</a><br><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Surge/">surge</a><br><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Wave/">wave</a><br><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Xray/">xray</a></p>
<p>使用该插件，加密文章解锁后文章的目录是不会显示的，这是一个毛病，有博主研究出了不是非常完美的方法，我在Next v7.80还可以使用，但是v8.2.0就不行了有兴趣的朋友自己去看看吧 <a href="https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/">地址在这</a></p>
<h2 id="标签云"><a href="#标签云" class="headerlink" title="标签云"></a>标签云</h2><p>我没有使用这个插件，使用方法就见官方的吧</p>
<p>插件<a href="https://github.com/D0n9X1n/hexo-tag-cloud">GitHub地址</a><br>作者<a href="https://vic.kim/2019/05/23/Hexo%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E6%A0%87%E7%AD%BE%E4%BA%91%E5%8F%8A%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA/">博客地址</a></p>
<h2 id="更改选中颜色"><a href="#更改选中颜色" class="headerlink" title="更改选中颜色"></a>更改选中颜色</h2><p>网站处于深色模式时，选中的字体不明显，下面是优化方法<br>主题文件取消  <code>style: source/_data/styles.styl</code>注释<br>在&#x2F;blog&#x2F;source&#x2F;_data&#x2F;styles.styl创建对应文件<br>添加以下代码，颜色可自行修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">::selection &#123;</span><br><span class="line">  background: #348de0;</span><br><span class="line">  color: #ffffff;</span><br><span class="line">&#125;</span><br><span class="line">::-moz-selection &#123;</span><br><span class="line">  background: #348de0;</span><br><span class="line">  color: #ffffff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="自定义404界面"><a href="#自定义404界面" class="headerlink" title="自定义404界面"></a>自定义404界面</h2><p>终端输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page 404</span><br></pre></td></tr></table></figure>

<p>将会在source目录下生成一个404文件夹，其中有一个index.md文件，这个文件其实就相当于是404.html了，自行修改里面内容吧，记得信息头加上<code>permalink: /404</code></p>
<h2 id="网站标题自动变化"><a href="#网站标题自动变化" class="headerlink" title="网站标题自动变化"></a>网站标题自动变化</h2><p>当窗口不再处于焦点时，更改为不同的标题</p>
<ol>
<li>通过插件实现,v8.2.0失效，<a href="https://github.com/theme-next/hexo-next-title">GitHub地址</a></li>
<li>手动修改，方法来自<a href="https://siriusq.top/Next-8-0-%E5%8D%87%E7%BA%A7%E6%97%A5%E5%BF%97.html?highlight=404#%E6%96%B0%E7%89%88%E5%B4%A9%E6%BA%83%E6%AC%BA%E9%AA%97">这里</a></li>
</ol>
<p>打开&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;js，新建js文件,我以change.js为例，下面是我的配置的代码，<br>网站图标记得修改，我是在PS把图标的颜色去掉了，注意图标路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var OriginTitle = document.title;</span><br><span class="line">var titleTime;</span><br><span class="line">var crashedIcon;</span><br><span class="line"></span><br><span class="line">if (window.matchMedia(&#x27;(prefers-color-scheme: dark)&#x27;).matches) &#123;</span><br><span class="line">    crashedIcon = &quot;/images/remove.png&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    crashedIcon = &quot;/images/remove.png&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.addEventListener(&#x27;visibilitychange&#x27;, function () &#123;</span><br><span class="line">    if (document.hidden) &#123;</span><br><span class="line">        var icons = document.querySelectorAll(&quot;link[rel=&#x27;icon&#x27;]&quot;);</span><br><span class="line">        for (var i = 0; i &lt; icons.length; i++) &#123;</span><br><span class="line">            icons[i].href = crashedIcon;</span><br><span class="line">        &#125;</span><br><span class="line">        document.title = &#x27;(°A°`) 不要走!再看看嘛!&#x27;;</span><br><span class="line">        clearTimeout(titleTime);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        var icons = document.querySelectorAll(&quot;link[rel=&#x27;icon&#x27;]&quot;);</span><br><span class="line">        for (var i = 0; i &lt; icons.length; i++) &#123;</span><br><span class="line">            icons[i].href = &quot;/images/rainbow.ico&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        document.title = &#x27;◝(⁰▿⁰)◜ 欢迎回来!&#x27; + OriginTitle;</span><br><span class="line">        titleTime = setTimeout(function () &#123;</span><br><span class="line">            document.title = OriginTitle;</span><br><span class="line">        &#125;, 2000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>打开主题配置文件去掉 <code> bodyEnd: source/_data/body-end.njk</code>的注释<br>同时在对应路径创建这个文件 &#x2F;blog&#x2F;source&#x2F;_data&#x2F;body-end.njk ，添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/change.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="修改文章底部的-号的标签"><a href="#修改文章底部的-号的标签" class="headerlink" title="修改文章底部的#号的标签"></a>修改文章底部的#号的标签</h2><p>1.手动修改，方法来自<a href="https://blog.csdn.net/as480133937/article/details/100138838#t14">这里</a><br>修改文件&#x2F;blog&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_macro&#x2F;post.njk<br>找到<code> rel=“tag”&gt;#</code><br>将  #  换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if post.tags and post.tags.length %&#125;</span><br><span class="line">  &#123;%- set tag_indicate = &#x27;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;&#x27; if theme.tag_icon else &#x27;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;&#x27; %&#125;</span><br><span class="line">  &lt;div class=&quot;post-tags&quot;&gt;</span><br><span class="line">    &#123;%- for tag in post.tags.toArray() %&#125;</span><br><span class="line">      &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&#123;&#123; tag_indicate &#125;&#125; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &#123;%- endfor %&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>


<ol start="2">
<li>打开主题文件，<code>tag_icon: true</code></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span><br><span class="line">tag_icon: true</span><br></pre></td></tr></table></figure>

<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # Code Highlight theme</span><br><span class="line">  # All available themes: https://theme-next.js.org/highlight/</span><br><span class="line">  theme:</span><br><span class="line">    light: base16/synth-midnight-terminal-light</span><br><span class="line">    dark: atom-one-dark</span><br><span class="line">  prism:</span><br><span class="line">    light: prism</span><br><span class="line">    dark: prism-tomorrow</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # Available values: default | flat | mac</span><br><span class="line">    style: mac</span><br><span class="line">  # Fold code block</span><br><span class="line">  fold:</span><br><span class="line">    enable: false</span><br><span class="line">    height: 500</span><br></pre></td></tr></table></figure>

<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>用了思源宋体</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span><br><span class="line">  host:</span><br><span class="line"></span><br><span class="line">  # Font options:</span><br><span class="line">  # `external: true` will load this font family from `host` above.</span><br><span class="line">  # `family: Times New Roman`. Without any quotes.</span><br><span class="line">  # `size: x.x`. Use `em` as unit. Default: 1 (16px)</span><br><span class="line"></span><br><span class="line">  # Global font settings used for all elements inside &lt;body&gt;.</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Noto Serif SC</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for site title (.site-title).</span><br><span class="line">  title:</span><br><span class="line">    external: true</span><br><span class="line">    family: Fira Code</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line">    family: </span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for posts (.post-body).</span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line">  # Font settings for &lt;code&gt; and code blocks.</span><br><span class="line">  codes:</span><br><span class="line">    external: true</span><br><span class="line">    family: Fira Code, Noto Serif SC</span><br></pre></td></tr></table></figure>

<h2 id="添加CC协议"><a href="#添加CC协议" class="headerlink" title="添加CC协议"></a>添加CC协议</h2><p>防君子不防小人</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># See: https://creativecommons.org/about/cclicenses/</span><br><span class="line">creative_commons:</span><br><span class="line">  # Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  # Available values: big | small</span><br><span class="line">  size: small</span><br><span class="line">  sidebar: false</span><br><span class="line">  post: true</span><br><span class="line">  # You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span><br><span class="line">  # CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span><br><span class="line">  language: zh-CN</span><br></pre></td></tr></table></figure>

<h2 id="网站搜索"><a href="#网站搜索" class="headerlink" title="网站搜索"></a>网站搜索</h2><p><a href="https://github.com/next-theme/hexo-generator-searchdb">GitHub地址</a></p>
<p>安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>

<p>站点配置添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br></pre></td></tr></table></figure>

<p>主题配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local Search</span><br><span class="line"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  trigger: auto				#若为manual, 通过按下enter键或者点击搜索按钮触发搜索</span><br><span class="line">  # Show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br><span class="line">  # Preload the search data when the page loads.</span><br><span class="line">  preload: false</span><br></pre></td></tr></table></figure>

<h2 id="不蒜子网站统计"><a href="#不蒜子网站统计" class="headerlink" title="不蒜子网站统计"></a>不蒜子网站统计</h2><p>本地预览时，访问量不正常，部署后才可用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: far fa-eye</span><br></pre></td></tr></table></figure>

<p>自定义文字，打开&#x2F;blog&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.njk<br>下面是我的配置，修改中文就可以</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.busuanzi_count.enable %&#125;</span><br><span class="line">&lt;div class=&quot;busuanzi-count&quot;&gt;</span><br><span class="line">  &#123;%- if theme.busuanzi_count.total_visitors %&#125;</span><br><span class="line">    &lt;span class=&quot;post-meta-item&quot; id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line">      &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;site-uv&quot; title=&quot;&#123;&#123; __(&#x27;footer.total_visitors&#x27;) &#125;&#125;&quot;&gt;</span><br><span class="line">        来过 &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt; 人</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;%- if theme.busuanzi_count.total_views %&#125;</span><br><span class="line">    &lt;span class=&quot;post-meta-item&quot; id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class="line">      &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;&#123;&#123; theme.busuanzi_count.total_views_icon &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;site-pv&quot; title=&quot;&#123;&#123; __(&#x27;footer.total_views&#x27;) &#125;&#125;&quot;&gt;</span><br><span class="line">        读了 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; 次</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="添加网站运行时间"><a href="#添加网站运行时间" class="headerlink" title="添加网站运行时间"></a>添加网站运行时间</h2><p>打开blog&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.njk（修改底部信息的顺序也在这）<br>运行时间精确到天，底部信息居的代码中是叫GPT写的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  function createtime() &#123;</span><br><span class="line">      var now = new Date();</span><br><span class="line">      var grt = new Date(&quot;7/30/2024 00:00:00&quot;); // 设置开始日期</span><br><span class="line">      var days = Math.floor((now - grt) / 1000 / 60 / 60 / 24); // 计算已运行天数</span><br><span class="line">      document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;已运行 &quot; + days + &quot; 天 &quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  createtime(); // 初始调用</span><br><span class="line">  setInterval(createtime, 86400000); // 每天更新一次（86400000 毫秒 = 24 小时）</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .footer-container &#123;</span><br><span class="line">    text-align: center; /* 保证内容居中 */</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .footer-content &#123;</span><br><span class="line">    display: flex; /* 使用flex布局 */</span><br><span class="line">    justify-content: center; /* 水平居中对齐 */</span><br><span class="line">    align-items: center; /* 垂直居中对齐 */</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .copyright,</span><br><span class="line">  .runtime &#123;</span><br><span class="line">    margin: 0 10px; /* 添加左右间距 */</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>打开&#x2F;blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;css&#x2F;_common&#x2F;outline&#x2F;footer&#x2F;index.styl</p>
<p>底部添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.footer-container &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin: 0px;</span><br><span class="line">  padding: 0px;</span><br><span class="line">  background-color: transparent; /* 可选：页脚背景颜色 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.footer-container .beian,</span><br><span class="line">.footer-container .copyright,</span><br><span class="line">.footer-container .wordcount,</span><br><span class="line">.footer-container .busuanzi-count,</span><br><span class="line">.footer-container .powered-by &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="小插件"><a href="#小插件" class="headerlink" title="小插件"></a>小插件</h2><h3 id="自动添加空格"><a href="#自动添加空格" class="headerlink" title="自动添加空格"></a>自动添加空格</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Automatically insert whitespace between CJK and half-width characters.</span><br><span class="line"># For more information: https://github.com/vinta/pangu.js</span><br><span class="line"># Server-side plugin: https://github.com/next-theme/hexo-pangu</span><br><span class="line">pangu: true</span><br></pre></td></tr></table></figure>

<h3 id="在-hexo-生成后删除不必要的文件"><a href="#在-hexo-生成后删除不必要的文件" class="headerlink" title="在 hexo 生成后删除不必要的文件"></a>在 hexo 生成后删除不必要的文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Remove unnecessary files after hexo generate.</span><br><span class="line">minify: true</span><br></pre></td></tr></table></figure>

<h3 id="网站优化加速"><a href="#网站优化加速" class="headerlink" title="网站优化加速"></a>网站优化加速</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Easily enable fast Ajax navigation on your website.</span><br><span class="line"># For more information: https://github.com/next-theme/pjax</span><br><span class="line">pjax: true</span><br></pre></td></tr></table></figure>


<h1 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h1><p>方法来自<a href="https://yangbingdong.com/2017/build-blog-hexo-base/#%E6%B3%A8%E5%86%8CGithub%E5%92%8CCoding%E5%B9%B6%E5%88%86%E5%88%AB%E5%88%9B%E5%BB%BAPages">这里</a></p>
<p>注意创建项目时<br>{user_name}.github.io, 其中{user_name}必须与你的用户名一样, 这是github pages的特殊命名规范</p>
<p>如果不想这样弄也是可以的，请见这篇<a href="https://notes.boshkuo.com/docs/Hexo/Basic/hexo-from-scratch-6">文章</a>，我没有去实操</p>
<h2 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h2><p><code>ssh-keygen -t rsa -C your_email@youremail.com</code></p>
<p>改成你的邮箱，之后会要求确认路径和输入密码, 懒得管就一路回车. 成功的话会在~&#x2F;下生成.ssh文件夹, 进去, 打开id_rsa.pub, 复制里面的key</p>
<p>首先是Github, 登录Github, 右上角 头像 -&gt; Settings —&gt; SSH nd GPG keys —&gt; New SSH key . 把公钥粘贴到key中, 填好title并点击 Add SSH key</p>
<h2 id="验证成功"><a href="#验证成功" class="headerlink" title="验证成功"></a>验证成功</h2><p><code>ssh -T git@github.com</code></p>
<p>如果是第一次的会提示是否continue, 输入** yes**  就会看到:<br>You’ve successfully authenticated, but GitHub does not provide shell access .<br>这就表示已成功连上github</p>
<h2 id="安装部署插件"><a href="#安装部署插件" class="headerlink" title="安装部署插件"></a>安装部署插件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h2 id="站点配置-1"><a href="#站点配置-1" class="headerlink" title="站点配置"></a>站点配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:Username/Username.github.io.git,master</span><br></pre></td></tr></table></figure>

<p>在我的环境下，只有这样的写法才能部署成功</p>
<p>下面这个方法也有很多大佬提过，但是我就是部署不上，所以就弃用了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/Username/Username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<h2 id="部署至Github-Pages"><a href="#部署至Github-Pages" class="headerlink" title="部署至Github Pages"></a>部署至Github Pages</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>

<p>这样就大功告成了</p>
<h1 id="Ending"><a href="#Ending" class="headerlink" title="Ending"></a>Ending</h1><p>30号搭建完网站，9号才开始写总结，14号才写完，一直拖导致很多细节都忘记了，搭博客之前看到有人说搭博客比写博客好玩，看来还真有点道理。及时记录挺重要的。</p>
<p>博客还有很多不完善之处，这里把能想到的列出来，之后慢慢弄吧</p>
<ul>
<li><input disabled="" type="checkbox"> 评论系统</li>
<li><input disabled="" type="checkbox"> 优化cdn</li>
<li><input disabled="" type="checkbox"> 深浅色切换按钮</li>
</ul>
<p>搭建网站看了很多很多大佬的教程，感谢大佬们的无私分享<br>1.<a href="https://blog.csdn.net/as480133937/article/details/100138838">https://blog.csdn.net/as480133937/article/details/100138838</a><br>2.<a href="http://home.ustc.edu.cn/~liujunyan/blog/hexo-next-theme-config/">http://home.ustc.edu.cn/~liujunyan/blog/hexo-next-theme-config/</a><br>3.<a href="https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/">https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/</a><br>4.<a href="https://blog.csdn.net/jiunian_2761/article/details/122908619">https://blog.csdn.net/jiunian_2761/article/details/122908619</a><br>5.<a href="https://hexo-next.readthedocs.io/zh-cn/latest/">https://hexo-next.readthedocs.io/zh-cn/latest/</a><br>6.<a href="https://hst15701102464.github.io/2022/02/17/next%E4%B8%BA%E9%A6%96%E9%A1%B5%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E8%BE%B9%E6%A1%86%E9%98%B4%E5%BD%B1-%E7%BB%9D%E5%AF%B9%E6%9C%89%E6%95%88/">https://hst15701102464.github.io/2022/02/17/next%E4%B8%BA%E9%A6%96%E9%A1%B5%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E8%BE%B9%E6%A1%86%E9%98%B4%E5%BD%B1-%E7%BB%9D%E5%AF%B9%E6%9C%89%E6%95%88/</a><br>7.<a href="https://io-oi.me/tech/hexo-next-optimization/">https://io-oi.me/tech/hexo-next-optimization/</a><br>8.<a href="https://www.lvxuefei.top/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/">https://www.lvxuefei.top/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96/</a><br>9.<a href="https://www.techgrow.cn/posts/abf4aee1.html#Next-8-x-%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E5%8F%AF%E5%88%87%E6%8D%A2%E7%9A%84%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F">https://www.techgrow.cn/posts/abf4aee1.html#Next-8-x-%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0%E5%8F%AF%E5%88%87%E6%8D%A2%E7%9A%84%E6%9A%97%E9%BB%91%E6%A8%A1%E5%BC%8F</a><br>10.<a href="https://lanlan2017.github.io/blog/63f5df0e/#%E5%88%A0%E9%99%A4landscape%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">https://lanlan2017.github.io/blog/63f5df0e/#%E5%88%A0%E9%99%A4landscape%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6</a><br>11.<a href="https://theme-next.js.org/pisces/">https://theme-next.js.org/pisces/</a><br>12.<a href="https://siriusq.top/Next-8-0-%E5%8D%87%E7%BA%A7%E6%97%A5%E5%BF%97.html?highlight">https://siriusq.top/Next-8-0-%E5%8D%87%E7%BA%A7%E6%97%A5%E5%BF%97.html?highlight</a><br>13.<a href="https://vic.kim/2019/05/23/Hexo%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E6%A0%87%E7%AD%BE%E4%BA%91%E5%8F%8A%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA/">https://vic.kim/2019/05/23/Hexo%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E6%A0%87%E7%AD%BE%E4%BA%91%E5%8F%8A%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA/</a><br>14.<a href="https://notes.boshkuo.com/docs/Hexo/Advance/hexo-advanced-supplementary-1">https://notes.boshkuo.com/docs/Hexo/Advance/hexo-advanced-supplementary-1</a><br>15.<a href="https://yangbingdong.com/2017/build-blog-hexo-base/#GitHub">https://yangbingdong.com/2017/build-blog-hexo-base/#GitHub</a><br>16.<a href="https://blog.luzy.top/posts/456645515/">https://blog.luzy.top/posts/456645515/</a><br>17.<a href="https://www.iszy.cc/posts/a8mr7k/">https://www.iszy.cc/posts/a8mr7k/</a><br>18.<a href="https://blog.csdn.net/xingyuzhongxuan/article/details/125392822">https://blog.csdn.net/xingyuzhongxuan/article/details/125392822</a></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 查询 NAT 类型</title>
    <url>/2024/07/17/Mac%E6%9F%A5%E8%AF%A2NAT%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p>安装好Python和pip<br>使用 pip 安装 pystun3。这是一个用于获取 STUN 服务器信息的 Python 库。</p>
<span id="more"></span>
<p><code>python -m pip install pystun3</code></p>
<p>安装完成后，您可以通过以下命令验证 pystun3 是否安装成功：<br><code>pip3 show pystun3</code></p>
<p>现在，我们将使用 pystun3 获取 NAT 类型。首先，在终端中启动 Python 解释器：<br><code>python3</code></p>
<p>然后，输入以下 Python 代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> stun</span><br><span class="line">stun.get_ip_info()</span><br></pre></td></tr></table></figure>

<p>附NAT类型介绍：</p>
<ul>
<li>NAT1（Full Cone NAT 全锥形NAT）： 这是最开放的NAT类型。任何外部主机只要知道内部主机的IP地址和端口号，就可以通过相同的外部IP和端口访问内部主机。</li>
<li>NAT2（Restricted Cone NAT 受限锥型NAT）： 在这种类型下，只有内部主机与外部主机进行通信后，外部主机才能通过相同的外部IP和端口访问内部主机。</li>
<li>NAT3（Port-Restricted Cone NAT 端口受限锥型NAT）： 这种类型要求外部主机必须知道内部主机的特定端口号才能进行通信。只允许内部主机发起的连接，外部主机只能响应这些连接。</li>
<li>NAT4（Symmetric NAT 对称型NAT）： 这是最严格的NAT类型。每个外部主机的通信都使用不同的映射端口，只有目标主机才能进行回应。这意味着相同的内部IP和端口对不同的外部地址和端口会有不同的映射，这种类型的NAT最难与外部主机建立连接。</li>
</ul>
<p>本文搬运自：<br><a href="https://blog.zhheo.com/p/76f914a8.html">https://blog.zhheo.com/p/76f914a8.html</a><br><a href="https://www.kulafan.com/2023/07/31/%E5%A6%82%E4%BD%95%E5%9C%A8mac%E4%B8%AD%E6%B5%8B%E8%AF%95nat%E7%B1%BB%E5%9E%8B/">https://www.kulafan.com/2023/07/31/%E5%A6%82%E4%BD%95%E5%9C%A8mac%E4%B8%AD%E6%B5%8B%E8%AF%95nat%E7%B1%BB%E5%9E%8B/</a></p>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Systemctl运行Rustdesk服务端</title>
    <url>/2024/04/30/%E4%BD%BF%E7%94%A8Systemctl%E8%BF%90%E8%A1%8CRustdesk%E6%9C%8D%E5%8A%A1%E7%AB%AF/</url>
    <content><![CDATA[<h1 id="下载服务端"><a href="#下载服务端" class="headerlink" title="下载服务端"></a>下载服务端</h1><p>首先在<br><a href="https://github.com/rustdesk/rustdesk-server/releases%60">https://github.com/rustdesk/rustdesk-server/releases`</a><span id="more"></span><br>下载最新版的 rustdesk-server-linux-amd64.zip<br>再FTP上传到自己的服务器地址,或者直接使用wget也可以</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 使用wget下载1.1.11-1版本</span></span><br><span class="line">wget https://github.com/rustdesk/rustdesk-server/releases/download/1.1.11-1/rustdesk-server-linux-amd64.zip</span><br><span class="line"><span class="comment">## unzip解压</span></span><br><span class="line">unzip rustdesk-server-linux-amd64.zip</span><br><span class="line"><span class="comment">## 重命名解压后的文件（可选）</span></span><br><span class="line"><span class="built_in">mv</span> amd64 rustdesk</span><br></pre></td></tr></table></figure>

<h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p><strong>我把程序文件放在 “&#x2F;rustdesk”下了,注意根据自己的位置修改</strong></p>
<p>&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;路径下创建自启动service文件<br><code>cd /etc/systemd/system/</code></p>
<p>在文件中添加以下内容（注意修改脚本文件所在路径），编辑完后保存退出</p>
<p>运行的两个文件是干嘛的?</p>
<ul>
<li>hbbs: RustDesk的ID服务，用于分配和注册ID；</li>
<li>hbbr: RustDesk的中继服务，如果直连远程不行，会使用hbbr进行流量中继。</li>
</ul>
<p><strong>hbbs.service</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=hbbs</span><br><span class="line">After=network.target syslog.target  <span class="comment">##在网络和系统日志服务可用后，服务才会启动</span></span><br><span class="line">Wants = network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=root</span><br><span class="line">Restart=on-failure      <span class="comment">##程序崩溃会自动重启,之前用着就会失效,所以加了这个</span></span><br><span class="line">RestartSec=5s</span><br><span class="line">WorkingDirectory=/rustdesk      <span class="comment">##这里修改成你的位置</span></span><br><span class="line">ExecStart=/rustdesk/hbbs -k _     <span class="comment">##-k _ 是强制加密,新版好像改了参数</span></span><br><span class="line">ExecStop=/bin/kill -TERM <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>


<p><strong>hbbr.service</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=hbbr</span><br><span class="line">After=network.target syslog.target</span><br><span class="line">Wants = network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=root</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5s</span><br><span class="line">WorkingDirectory=/rustdesk</span><br><span class="line">ExecStart=/rustdesk/hbbr -k _</span><br><span class="line">ExecStop=/bin/kill -TERM <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>使用systemctl命令重载配置<br><code>systemctl daemon-reload</code></p>
<p>运行程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start hbbr.service</span><br><span class="line">systemctl start hbbs.service</span><br></pre></td></tr></table></figure>

<p>设置开机自动运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> hbbs.service</span><br><span class="line">systemctl <span class="built_in">enable</span> hbbr.service</span><br></pre></td></tr></table></figure>

<p>检验程序是否启动，如果看到进程中有hbbs和hbbr进程则代表启动成功<br><code>ps -ef | grep hbb</code></p>
<img src="https://tcer.rr.nu/i/2024/08/07/66b3211c1815b.png" width=80% height=80% />

<p>也可用systemctl status查看运行状态<br><code>systemctl status hbbs</code></p>
<img src="https://tcer.rr.nu/i/2024/08/07/66b31fc133801.png" width=80% height=80% />

<p><strong>Systemctl其他命令</strong><br>查看当前系统中所有的服务列表，并找到需要关闭的服务：<br><code>systemctl list-unit-files --type=service</code><br>停止需要关闭的服务：<br><code>systemctl stop [service_name].service</code><br>禁止服务开机自启：<br><code>systemctl disable [service_name].service</code></p>
<h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><p>在RustDesk设置的网络中,ID和中继服务器都填上服务器的IP,如果开启了加密,key的值在服务端运行后,程序文件夹(&#x2F;rustdesk)下面会有 <strong>.pub</strong> 文件,key就是 <strong>.pub</strong> 文件里面的值</p>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.mintimate.cn/2023/08/27/guideToHostRustDesk/">https://www.mintimate.cn/2023/08/27/guideToHostRustDesk/</a><br><a href="https://blog.csdn.net/ZRongZH/article/details/131210221">https://blog.csdn.net/ZRongZH/article/details/131210221</a></p>
]]></content>
      <tags>
        <tag>Systemctl</tag>
        <tag>Rustdesk</tag>
      </tags>
  </entry>
  <entry>
    <title>青龙面板保活Serv00并启用TG推送</title>
    <url>/2024/08/01/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E4%BF%9D%E6%B4%BBServ00%E5%B9%B6%E5%90%AF%E7%94%A8TG%E6%8E%A8%E9%80%81/</url>
    <content><![CDATA[<p>网上有很多使用GitHub Actions来保号的教程，关于青龙面板的很少，所以自己研究了一下，下面是我的方案。<span id="more"></span>如有不当之处，欢迎大家批评指正。注意，此方法有点毛病，<a href="#%E4%BB%A5%E4%B8%8A%E4%BB%A3%E7%A0%81%E4%B8%80%E4%BA%9B%E5%8F%82%E6%95%B0%E7%9A%84%E4%BD%9C%E7%94%A8">请见此处</a></p>
<h1 id="安装sshpass依赖和jq"><a href="#安装sshpass依赖和jq" class="headerlink" title="安装sshpass依赖和jq"></a>安装sshpass依赖和jq</h1><p>青龙面板—依赖管理—Linux—添加<code>sshpass</code>和<code>jq</code><br>sshpass的使用可以见<a href="https://linux.cn/article-8086-1.html">这篇文章</a></p>
<h1 id="添加脚本-24-8-3-更新脚本"><a href="#添加脚本-24-8-3-更新脚本" class="headerlink" title="添加脚本 24.8.3 更新脚本"></a><del>添加脚本</del> <a href="#%E6%9B%B4%E6%96%B0%E8%84%9A%E6%9C%AC">24.8.3 更新脚本</a></h1><p>青龙面板—脚本管理—添加sh脚本<br>以下脚本是GPT写的多账号脚本，（第二次感受到生成式AI的便利，第一次是写openclah的防火墙规则）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始执行任务...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行远程命令并将输出存储在变量中</span></span><br><span class="line">OUTPUT1=$(sshpass -p <span class="string">&#x27;密码&#x27;</span> ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -tt 用户名@主机 <span class="string">&quot;ps -A; exit&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;执行命令失败: <span class="variable">$OUTPUT1</span>&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">OUTPUT2=$(sshpass -p <span class="string">&#x27;密码&#x27;</span> ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -tt 用户名@主机 <span class="string">&quot;ps -A; exit&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;执行命令失败: <span class="variable">$OUTPUT2</span>&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出命令的结果</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;输出1:\n<span class="variable">$OUTPUT1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;输出2:\n<span class="variable">$OUTPUT2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;任务执行完成&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 Telegram 推送通知</span></span><br><span class="line">TOKEN=<span class="string">&quot;机器人token&quot;</span></span><br><span class="line">CHAT_ID=<span class="string">&quot;用户id&quot;</span></span><br><span class="line">MESSAGE=<span class="string">&quot;任务执行完成\n\n输出1:\n<span class="variable">$OUTPUT1</span>\n\n输出2:\n<span class="variable">$OUTPUT2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 urlencode 对消息进行编码，以便在 URL 中安全传输</span></span><br><span class="line">MESSAGE_ENCODED=$(<span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$MESSAGE</span>&quot;</span> | jq -sRr @uri)</span><br><span class="line"></span><br><span class="line">curl -s -X POST <span class="string">&quot;https://api.telegram.org/bot<span class="variable">$TOKEN</span>/sendMessage&quot;</span> \</span><br><span class="line">     -d <span class="string">&quot;chat_id=<span class="variable">$CHAT_ID</span>&amp;text=<span class="variable">$MESSAGE_ENCODED</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>记得把其中的密码、用户名、主机、机器人token、用户id修改为自己的。</p>
<h1 id="更新脚本"><a href="#更新脚本" class="headerlink" title="更新脚本"></a>更新脚本</h1><p>后面闲着没事又整了两个号，发现脚本添加账号不方便，而且没有报错的提示，有指令输入错误就会卡死’ps -A; exit’没用，所以又去和GPT聊了聊，更新下面几点:</p>
<ol>
<li>多账号添加更方便;</li>
<li>设置了ssh超时,避免了脚本卡死;</li>
<li>电报消息可以提示哪些账号出错。</li>
</ol>
<p>如有连接不上可以检查是否在 <a href="https://www.serv00.com/ip_unban/">https://www.serv00.com/ip_unban/</a> 解锁了IP(我调试脚本就把我IP禁过😂)</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始执行任务...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个数组来存储输出和错误信息</span></span><br><span class="line"><span class="built_in">declare</span> -A OUTPUTS</span><br><span class="line"><span class="comment"># 用于标记是否有命令失败</span></span><br><span class="line">has_error=<span class="literal">false</span></span><br><span class="line"><span class="comment"># 用于存储成功的命令</span></span><br><span class="line">successful_commands=()</span><br><span class="line"><span class="comment"># 用于存储失败的命令</span></span><br><span class="line">failed_commands=()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 SSH 超时（单位：秒）</span></span><br><span class="line">SSH_TIMEOUT=15</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义账号、密码和主机信息数组，每个元素包含 &quot;账号:密码:主机&quot;，一行一组</span></span><br><span class="line">CREDENTIALS=(</span><br><span class="line"><span class="string">&quot;账号1:密码1:主机1&quot;</span></span><br><span class="line"><span class="string">&quot;账号2:密码2:主机2&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历每行并执行命令</span></span><br><span class="line"><span class="keyword">for</span> cred <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;CREDENTIALS[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    IFS=<span class="string">&#x27;:&#x27;</span> <span class="built_in">read</span> -r user pass host &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$cred</span>&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$user</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    </span><br><span class="line">    OUTPUTS[<span class="string">&quot;<span class="variable">$user</span>&quot;</span>]=$(sshpass -p <span class="string">&quot;<span class="variable">$pass</span>&quot;</span> ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=<span class="variable">$SSH_TIMEOUT</span> -t <span class="variable">$user</span>@<span class="variable">$host</span> <span class="string">&quot;ps -A&quot;</span> 2&gt;&amp;1)</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;执行命令失败: <span class="variable">$user</span>: <span class="variable">$&#123;OUTPUTS[&quot;$user&quot;]&#125;</span>&quot;</span></span><br><span class="line">        has_error=<span class="literal">true</span></span><br><span class="line">        failed_commands+=(<span class="string">&quot;<span class="variable">$user</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;执行命令成功: <span class="variable">$user</span>: <span class="variable">$&#123;OUTPUTS[&quot;$user&quot;]&#125;</span>&quot;</span></span><br><span class="line">        successful_commands+=(<span class="string">&quot;<span class="variable">$user</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建 Telegram 消息内容</span></span><br><span class="line">TOKEN=<span class="string">&quot;机器人token&quot;</span></span><br><span class="line">CHAT_ID=<span class="string">&quot;用户id&quot;</span></span><br><span class="line">MESSAGE=<span class="string">&quot;保号任务执行结果:\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加成功的命令到消息</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;#successful_commands[@]&#125;</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">    MESSAGE+=<span class="string">&quot;保号成功:\n&quot;</span></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;successful_commands[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">        MESSAGE+=<span class="string">&quot;\n<span class="variable">$user</span>:\n<span class="variable">$&#123;OUTPUTS[$user]&#125;</span>\n&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加失败的命令到消息</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;#failed_commands[@]&#125;</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">    MESSAGE+=<span class="string">&quot;\n以下账号出错了😭:\n&quot;</span></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;failed_commands[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">        MESSAGE+=<span class="string">&quot;<span class="variable">$user</span>:\n<span class="variable">$&#123;OUTPUTS[$user]&#125;</span>\n&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 urlencode 对消息进行编码，以便在 URL 中安全传输</span></span><br><span class="line">MESSAGE_ENCODED=$(<span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$MESSAGE</span>&quot;</span> | jq -sRr @uri)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 Telegram 推送通知</span></span><br><span class="line">curl -s -X POST <span class="string">&quot;https://api.telegram.org/bot<span class="variable">$TOKEN</span>/sendMessage&quot;</span> \</span><br><span class="line">     -d <span class="string">&quot;chat_id=<span class="variable">$CHAT_ID</span>&amp;text=<span class="variable">$MESSAGE_ENCODED</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出最终结果</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$has_error</span>&quot;</span> = <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;请检查输入是否正确，或是否在 https://www.serv00.com/ip_unban/ 解锁了IP&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;任务执行完成,所有机器保号成功&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>附telegram的通知截图<br><img src="https://tcer.rr.nu/i/2024/08/05/66b044e5d99fb.png" width=50% height=50% /></p>
<h1 id="以上代码一些参数的作用"><a href="#以上代码一些参数的作用" class="headerlink" title="以上代码一些参数的作用"></a>以上代码一些参数的作用</h1><p><code>-o StrictHostKeyChecking=no</code><br>这是 SSH 的一个选项，表示在连接到新主机时不进行主机密钥检查。这可以避免在第一次连接时出现提示，适用于自动化脚本，但会降低安全性。</p>
<p><code>-o UserKnownHostsFile=/dev/null</code><br>这个选项指定 SSH 不使用已知主机文件（通常是 ~&#x2F;.ssh&#x2F;known_hosts），而是将其输出重定向到 &#x2F;dev&#x2F;null，即不保存任何主机密钥。这也是为了避免在自动化脚本中出现提示。</p>
<p><span style="color:red;">由上面两条可见此方法不是很安全，所以大家自行选择是否使用此方法。</span></p>
<p><code>-tt</code><br>这个选项强制分配一个伪终端（pseudo-terminal），这在某些情况下是必要的，尤其是当你需要在远程执行的命令中使用交互式功能时。</p>
<p><code>ps -A; exit</code><br><code>ps -A</code> 命令用于列出系统上所有正在运行的进程。<code>; exit</code> 可以确保在执行 ps -A 后，无论其成功与否，SSH 会话都会自动退出。如果想”ps-A”成功运行后再退出使用<code>&quot;ps -A &amp;&amp; exit&quot;</code></p>
<h1 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h1><p>青龙面板—定时任务—创建任务<br>名称随意<br>命令&#x2F;脚本填入你自定义的脚本名称，如：<br><code>task Serv00.sh</code><br>定时规则（cron表达式）<br>叫GPT帮着写吧，我也不会😂， 下面是每 7 天的 6:00 AM 执行一次。<br><code>0 6 */7 * *</code><br>点击确定就完成了。<br>（由于博客的图床还没想好用什么，所以就没放图了。）</p>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol>
<li><a href="https://gaojilingjuli.blogspot.com/2024/07/sshserv00.html">https://gaojilingjuli.blogspot.com/2024/07/sshserv00.html</a></li>
<li><a href="https://saika.us.kg/2024/01/27/serv00_logs#%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9C%9F">https://saika.us.kg/2024/01/27/serv00_logs#%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9C%9F</a></li>
<li><a href="https://linux.cn/article-8086-1.html">https://linux.cn/article-8086-1.html</a></li>
</ol>
]]></content>
      <tags>
        <tag>青龙面板</tag>
        <tag>Serv00</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE优化</title>
    <url>/2024/08/05/PVE%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>暑假闲来没事想起PVE这个底层系统还没怎么去折腾,就去翻了翻大佬们的优化教程。</p>
<span id="more"></span>

<h1 id="PVE优化工具"><a href="#PVE优化工具" class="headerlink" title="PVE优化工具"></a>PVE优化工具</h1><h2 id="x86派老虎大神"><a href="#x86派老虎大神" class="headerlink" title="x86派老虎大神"></a><a href="https://bbs.x86pi.cn/thread?topicId=20">x86派老虎大神</a></h2><img src="https://tcer.rr.nu/i/2024/08/05/66b055f209acb.png" width=50% height=50% />
我这次优化就只使用了一这款,因为能显示CPU的实时频率,还有网卡名称使用原始命名

<h2 id="pvetools"><a href="#pvetools" class="headerlink" title="pvetools"></a><a href="https://github.com/ivanhao/pvetools">pvetools</a></h2><p>PVE上star有4.1k(2024.8.5)<br><img src="https://tcer.rr.nu/i/2024/08/05/66b08fef1b584.webp" width=60% height=60% /></p>
<h2 id="恩山大佬shell脚本"><a href="#恩山大佬shell脚本" class="headerlink" title="恩山大佬shell脚本"></a><a href="https://www.right.com.cn/forum/thread-6754687-1-1.html">恩山大佬shell脚本</a></h2><p>开源地址<a href="https://github.com/a904055262/PVE-manager-status">https://github.com/a904055262/PVE-manager-status</a><br>这一款的功能比上面少一些了<br><img src="https://tcer.rr.nu/i/2024/08/05/66b05882259b3.jpg" width=75% height=75% /></p>
<h1 id="移除local-lvm存储空间"><a href="#移除local-lvm存储空间" class="headerlink" title="移除local-lvm存储空间"></a>移除local-lvm存储空间</h1><p>注意:<br>1、移除 local-lvm 后会导致虚拟机及 CT 容器的快照功能失效<br>2、移除前需自行关闭并备份各虚拟机、CT 容器等, 谨防移除造成数据丢失 </p>
<p>因为我用不上快照功能,所以把他移除了,移除后能更好利用硬盘资源<br>备份是备份在llocal里面的,可以放心删除local-lvm</p>
<p>恩山上的<a href="https://www.right.com.cn/forum/thread-3513183-1-1.html">帖子</a><br>1、备份虚拟机<br>2、删除虚拟机<br>3、删除local-lvm<br>命令：<code>lvremove pve/data</code><br>4、把local-lvm空间分配给Local<br>命令：<code>lvextend -l +100%FREE -r pve/root</code><br>5、删除local-lvm<br>数据中心-存储-删除local-lvm<br>6、编辑local，内容里添加 磁盘映像和容器<br>7、恢复虚拟机</p>
<p>懒得输命令就用老虎的脚本吧</p>
<p>虚拟机的安装以及还原,可以看看这两个视频<br><a href="https://www.bilibili.com/video/BV1aM4m1U7Fy/">https://www.bilibili.com/video/BV1aM4m1U7Fy/</a><br><a href="https://www.bilibili.com/video/BV1Gi421U78K/">https://www.bilibili.com/video/BV1Gi421U78K/</a></p>
<h1 id="开启iommu"><a href="#开启iommu" class="headerlink" title="开启iommu"></a>开启iommu</h1><h2 id="修改-etc-default-grub"><a href="#修改-etc-default-grub" class="headerlink" title="修改/etc/default/grub"></a>修改<code>/etc/default/grub</code></h2><p>在里面找到：GRUB_CMDLINE_LINUX_DEFAULT&#x3D;”quiet”<br>Intel cpu改为：GRUB_CMDLINE_LINUX_DEFAULT&#x3D;”quiet intel_iommu&#x3D;on”<br>AMD cpu请改为：GRUB_CMDLINE_LINUX_DEFAULT&#x3D;”quiet amd_iommu&#x3D;on”</p>
<p>我的文件里面是这些</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on iommu=pt&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;net.ifnames=0 biosdevname=0&quot;</span><br></pre></td></tr></table></figure>
<p>##修改完成之后，直接更新grub<br><code>update-grub</code></p>
<h2 id="加载相应的内核模块"><a href="#加载相应的内核模块" class="headerlink" title="加载相应的内核模块"></a>加载相应的内核模块</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo vfio &gt;&gt; /etc/modules</span><br><span class="line">echo vfio_iommu_type1 &gt;&gt; /etc/modules</span><br><span class="line">echo vfio_pci &gt;&gt; /etc/modules</span><br><span class="line">echo vfio_virqfd &gt;&gt; /etc/modules</span><br></pre></td></tr></table></figure>
<p>也可以去<code>/etc/modules</code>直接添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vfio</span><br><span class="line">vfio_iommu_type1</span><br><span class="line">vfio_pci</span><br><span class="line">vfio_virqfd</span><br><span class="line">coretemp</span><br></pre></td></tr></table></figure>
<h2 id="重启主机"><a href="#重启主机" class="headerlink" title="重启主机"></a>重启主机</h2><h2 id="验证是否开启iommu"><a href="#验证是否开启iommu" class="headerlink" title="验证是否开启iommu"></a>验证是否开启iommu</h2><p>终端输入<br><code>dmesg | grep iommu</code><br>出现如下例子。则代表成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ 1.341100] pci 0000:00:00.0: Adding to iommu group 0</span><br><span class="line">[ 1.341116] pci 0000:00:01.0: Adding to iommu group 1</span><br><span class="line">[ 1.341126] pci 0000:00:02.0: Adding to iommu group 2</span><br><span class="line">[ 1.341137] pci 0000:00:14.0: Adding to iommu group 3</span><br><span class="line">[ 1.341146] pci 0000:00:17.0: Adding to iommu group 4</span><br></pre></td></tr></table></figure>
<p>或者输入<br><code>dmesg | grep &#39;remapping&#39;</code><br>出现如下例子。则代表成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AMD-Vi: Interrupt remapping enabled</span><br><span class="line">#或者</span><br><span class="line">DMAR-IR: Enabled IRQ remapping in x2apic mode</span><br></pre></td></tr></table></figure>

<p>此时输入命令<br><code>find /sys/kernel/iommu_groups/ -type l </code><br>#出现很多直通组，就代表成功了。如果没有任何东西，就是没有开启</p>
<h1 id="其他的一些优化"><a href="#其他的一些优化" class="headerlink" title="其他的一些优化"></a>其他的一些优化</h1><p>换源、移除订阅、修改概要信息、重命名网口用老虎大佬的一键脚本就行了</p>
<p>下面这个帖子对PVE系统的讲解很全,有需要的可以去看看<br><a href="https://www.chiphell.com/thread-2496541-1-1.html">https://www.chiphell.com/thread-2496541-1-1.html</a></p>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol>
<li><a href="https://www.xh86.me/?p=724">https://www.xh86.me/?p=724</a></li>
<li><a href="https://foxi.buduanwang.vip/virtualization/pve/561.html/">https://foxi.buduanwang.vip/virtualization/pve/561.html/</a></li>
<li><a href="https://xxand.cc/84.html">https://xxand.cc/84.html</a></li>
<li><a href="https://bricawa.com/posts/56512/">https://bricawa.com/posts/56512/</a></li>
</ol>
]]></content>
      <tags>
        <tag>PVE</tag>
      </tags>
  </entry>
</search>
